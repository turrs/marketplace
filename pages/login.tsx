import Head from 'next/head';
import { Inter } from '@next/font/google';
import Headers from '../components/Headers';
import Navbar from '../components/NavBar';
import CategorySection from '../section/CategorySection';
import TitleCategory from '../components/TitleCategory';
import Catalog from '../section/Catalog';
import InfoSection from '../section/InfoSection';
import FooterSection from '../section/FootersSection';
import CategoryItem from '../components/CategoryItem';
import { asyncSetAllProduct } from '../states/Product/action';
import { RootState, useAppDispatch, useAppSelector } from '../states';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import {
  asyncGetAllUsers,
  asyncSetLogin,
  saveAccessToken,
  setUserLogin,
} from '../states/User/action';
import { useRouter } from 'next/router';
import { useSelector } from 'react-redux';
import { asyncGetAllCartUser } from '../states/Cart/action';

type LoginProps = {};

const Login = (props: LoginProps) => {
  const useRouters = useRouter();
  const dispatch = useAppDispatch();
  const [inputLogin, setInputLogin] = useState<any>({
    userName: '',
    password: '',
  });
  const allUsers = useAppSelector((state) => state.users);
  const handleLogin = async (userName: any, password: any, allUsers: any) => {
    const token = await asyncSetLogin(userName, password);
    if (token) {
      saveAccessToken(token);
      const data = allUsers.find(
        (element: any) => element.username === userName,
      );
      if (data) {
        dispatch(setUserLogin(data));
        dispatch(asyncGetAllCartUser(data.id));
        useRouters.push('/catalog');
      }
    } else {
      console.log('login gagal');
    }
  };
  const getAllUser = async () => {
    dispatch(asyncGetAllUsers());
  };
  useEffect(() => {
    getAllUser();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" relative">
        <div className="hidden md:block gradient-02 inset-01 absolute w-[50%]" />
        <Headers />
        <div className="flex w-full py-[200px] justify-center">
          <div className="bg-white p-6 rounded-lg w-[400px]">
            <h2 className="text-lg text-jingga font-extrabold mb-4">Login</h2>
            <div className="mb-4">
              <label className="block text-gray-700 font-medium mb-2">
                Email
              </label>
              <input
                className="border border-gray-400 p-2 rounded-lg w-full"
                type="email"
                id="email"
                value={inputLogin.userName}
                onChange={(e) =>
                  setInputLogin({
                    userName: e.target.value,
                    password: inputLogin.password,
                  })
                }
                name="email"
              />
            </div>
            <div className="mb-4">
              <label className="block text-gray-700 font-medium mb-2">
                Password
              </label>
              <input
                className="border border-gray-400 p-2 rounded-lg w-full"
                type="password"
                id="password"
                name="password"
                value={inputLogin.password}
                onChange={(e) =>
                  setInputLogin({
                    userName: inputLogin.userName,
                    password: e.target.value,
                  })
                }
              />
            </div>
            <Link href="/register">
              <label className="block hover:underline  text-jingga hover:cursor-pointer font-medium mb-2">
                Register
              </label>
            </Link>
            <button
              onClick={() =>
                handleLogin(inputLogin.userName, inputLogin.password, allUsers)
              }
              className="bg-jingga text-white py-2 px-4 rounded-lg hover:bg-indigo-600"
            >
              Login
            </button>
          </div>
        </div>
        <div className="py-12">
          <InfoSection />
        </div>
        <FooterSection />
      </main>
    </>
  );
};

export default Login;
